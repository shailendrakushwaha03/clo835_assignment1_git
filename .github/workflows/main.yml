name: Deploy to ECR

on: 
  push:
    branches: [ master ]

jobs:
  build:
    name: Build and Push Images
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: us-east-1

    - name: Build, test, tag, and push application image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: webapp-assignment1
        APPLICATION_IMAGE_TAG: mywebapp
      run: |
        # Docker build and push application image 
        cd flaskapp/
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:application-$APPLICATION_IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:application-$APPLICATION_IMAGE_TAG

    - name: Build, test, tag, and push MySQL image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: mysql-assignment1
        MYSQL_IMAGE_TAG: mysql
      run: |
        # Docker build and push MySQL image
        cd flaskapp/
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:mysql-$MYSQL_IMAGE_TAG -f Dockerfile_mysql .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:mysql-$MYSQL_IMAGE_TAG

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Add SSH private key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Connect to EC2 and Install Docker, MySQL
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Update and install dependencies
          sudo yum update -y
          sudo yum install -y docker mysql

          # Start Docker service
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker ec2-user

          # Pull the application image from ECR
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
          docker pull ${{ secrets.ECR_REGISTRY }}/webapp-assignment1:application-mywebapp
          docker pull ${{ secrets.ECR_REGISTRY }}/mysql-assignment1:mysql-mysql

          # Run MySQL container
          docker run -d --name mysql-container -e MYSQL_ROOT_PASSWORD=root -p 3306:3306 ${{ secrets.ECR_REGISTRY }}/mysql-assignment1:mysql-mysql

          # Run the application container
          docker run -d --name webapp-container -p 80:80 --link mysql-container ${{ secrets.ECR_REGISTRY }}/webapp-assignment1:application-mywebapp
